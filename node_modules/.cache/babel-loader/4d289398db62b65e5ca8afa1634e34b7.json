{"ast":null,"code":"var _jsxFileName = \"/Users/kushdave/NiftytunesFINAL/ethereum-nft-marketplace-boilerplate/src/components/SearchCollections.jsx\",\n    _s = $RefreshSig$();\n\nimport { Select } from 'antd';\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getCollectionsByChain } from \"helpers/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchCollections(_ref) {\n  _s();\n\n  let {\n    setInputValue\n  } = _ref;\n  const {\n    Option\n  } = Select;\n  const {\n    chainId\n  } = useMoralisDapp();\n  const NFTCollections = getCollectionsByChain(chainId);\n\n  function onChange(value) {\n    setInputValue(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: \"1000px\",\n        marginLeft: \"20px\"\n      },\n      placeholder: \"Find a Collection\",\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      children: NFTCollections && NFTCollections.map((collection, i) => /*#__PURE__*/_jsxDEV(Option, {\n        value: collection.addrs,\n        children: collection.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchCollections, \"Q3Iq7A33gnqexI4ouqZk42Vxu0g=\", false, function () {\n  return [useMoralisDapp];\n});\n\n_c = SearchCollections;\nexport default SearchCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCollections\");","map":{"version":3,"sources":["/Users/kushdave/NiftytunesFINAL/ethereum-nft-marketplace-boilerplate/src/components/SearchCollections.jsx"],"names":["Select","useMoralisDapp","getCollectionsByChain","SearchCollections","setInputValue","Option","chainId","NFTCollections","onChange","value","width","marginLeft","map","collection","i","addrs","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mDAA/B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;;AAGA,SAASC,iBAAT,OAA2C;AAAA;;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAaL,MAAnB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcL,cAAc,EAAlC;AACA,QAAMM,cAAc,GAAGL,qBAAqB,CAACI,OAAD,CAA5C;;AAIA,WAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACrBL,IAAAA,aAAa,CAACK,KAAD,CAAb;AACH;;AAED,sBACI;AAAA,2BACA,QAAC,MAAD;AACI,MAAA,UAAU,MADd;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,QAAR;AACCC,QAAAA,UAAU,EAAE;AADb,OAFX;AAII,MAAA,WAAW,EAAC,mBAJhB;AAKI,MAAA,gBAAgB,EAAC,UALrB;AAMI,MAAA,QAAQ,EAAEH,QANd;AAAA,gBAQCD,cAAc,IACXA,cAAc,CAACK,GAAf,CAAmB,CAACC,UAAD,EAAaC,CAAb,kBACnB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,UAAU,CAACE,KAA1B;AAAA,kBAA2CF,UAAU,CAACG;AAAtD,SAAuCF,CAAvC;AAAA;AAAA;AAAA;AAAA,cADA;AATJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAmBH;;GA9BQX,iB;UAEeF,c;;;KAFfE,iB;AA+BT,eAAeA,iBAAf","sourcesContent":["import { Select } from 'antd';\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getCollectionsByChain } from \"helpers/collections\";\n\n\nfunction SearchCollections({setInputValue}){\n    const { Option } = Select;\n    const { chainId } = useMoralisDapp();\n    const NFTCollections = getCollectionsByChain(chainId);\n    \n    \n\n    function onChange(value) {\n        setInputValue(value);\n    }\n\n    return (\n        <>\n        <Select\n            showSearch\n            style={{width: \"1000px\",\n                    marginLeft: \"20px\" }}\n            placeholder=\"Find a Collection\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n        >   \n        {NFTCollections && \n            NFTCollections.map((collection, i) => \n            <Option value={collection.addrs} key= {i}>{collection.name}</Option>\n            )\n            }   \n        </Select>\n            \n        </>\n    )\n}\nexport default SearchCollections;"]},"metadata":{},"sourceType":"module"}